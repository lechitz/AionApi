// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/usecase/user/delete_user.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/lechitz/AionApi/internal/core/domain"
)

// MockUserDeleter is a mock of UserDeleter interface.
type MockUserDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockUserDeleterMockRecorder
}

// MockUserDeleterMockRecorder is the mock recorder for MockUserDeleter.
type MockUserDeleterMockRecorder struct {
	mock *MockUserDeleter
}

// NewMockUserDeleter creates a new mock instance.
func NewMockUserDeleter(ctrl *gomock.Controller) *MockUserDeleter {
	mock := &MockUserDeleter{ctrl: ctrl}
	mock.recorder = &MockUserDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserDeleter) EXPECT() *MockUserDeleterMockRecorder {
	return m.recorder
}

// SoftDeleteUser mocks base method.
func (m *MockUserDeleter) SoftDeleteUser(ctx domain.ContextControl, id uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SoftDeleteUser", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// SoftDeleteUser indicates an expected call of SoftDeleteUser.
func (mr *MockUserDeleterMockRecorder) SoftDeleteUser(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SoftDeleteUser", reflect.TypeOf((*MockUserDeleter)(nil).SoftDeleteUser), ctx, id)
}
