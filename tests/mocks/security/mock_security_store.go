// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/ports/output/security/hasher.go
//
// Generated by this command:
//
//	mockgen -source=internal/core/ports/output/security/hasher.go -destination=tests/mocks/security/mock_security_store.go -package=securitymocks
//

// Package securitymocks is a generated GoMock package.
package securitymocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
	isgomock struct{}
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// HashPassword mocks base method.
func (m *MockStore) HashPassword(plain string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HashPassword", plain)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HashPassword indicates an expected call of HashPassword.
func (mr *MockStoreMockRecorder) HashPassword(plain any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HashPassword", reflect.TypeOf((*MockStore)(nil).HashPassword), plain)
}

// ValidatePassword mocks base method.
func (m *MockStore) ValidatePassword(hashed, plain string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidatePassword", hashed, plain)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidatePassword indicates an expected call of ValidatePassword.
func (mr *MockStoreMockRecorder) ValidatePassword(hashed, plain any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidatePassword", reflect.TypeOf((*MockStore)(nil).ValidatePassword), hashed, plain)
}
