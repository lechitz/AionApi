# ---------------------------------------------------------------------
# Test Workflow for AionAPI (Go)
# Purpose: Run unit tests with race detection, JUnit reporting and proper caching.
# Trigger: Pull Requests targeting the 'main' branch.
# ---------------------------------------------------------------------

name: Test

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests and Generate JUnit Report
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      # Step 3: Clean mod cache (avoids tar conflicts with GORM)
      - name: Clean Go mod cache
        run: |
          go clean -modcache
          rm -rf ~/go/pkg/mod/gorm.io || true

      # Step 4: Ensure cache directories exist
      - name: Ensure cache dirs
        run: |
          mkdir -p ~/.cache/go-build
          mkdir -p ~/go/pkg/mod

      # Step 5: Cache Go build artifacts
      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-test-gobuild-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-test-gobuild-

      # Step 6: Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-test-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-test-gomod-

      # Step 7: Install gotestsum for JUnit reporting
      - name: Install gotestsum
        run: |
          go install gotest.tools/gotestsum@latest

      # Step 8: Run tests and generate JUnit XML
      - name: Run tests via gotestsum
        run: |
          gotestsum --junitfile tests/coverage/junit-report.xml -- -race ./...

      # Step 9: Upload JUnit report as an artifact
      - name: Upload JUnit report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: tests/coverage/junit-report.xml
