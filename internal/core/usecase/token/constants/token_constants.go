// Package constants contains constants related to token operations.
package constants

// TracerName is the name of the tracer for token operations.
const TracerName = "aionapi.token"

// SpanCreateToken is the name of the span for creating a token.
const SpanCreateToken = "CreateToken"

// SpanRevokeToken is the name of the span for revoking a token.
const SpanRevokeToken = "RevokeToken"

// SpanValidateToken is the name of the span for validating a token.
const SpanValidateToken = "ValidateToken"

// ErrorToSaveToken indicates an error saving the access reference.
const ErrorToSaveToken = "error saving access reference" // #nosec G101

// ErrorToGetToken indicates an error retrieving the access reference.
const ErrorToGetToken = "failed to retrieve token from cache" // #nosec G101

// ErrorToDeleteToken indicates an error deleting the access reference.
const ErrorToDeleteToken = "error deleting access reference" // #nosec G101

// ErrorToAssignToken indicates an error assigning the access reference.
const ErrorToAssignToken = "error assigning access reference"

// ErrEmptyTokenGenerated indicates the provider generated an empty token.
const ErrEmptyTokenGenerated = "empty token generated by provider"

// ErrorInvalidToken indicates the token is invalid.
const ErrorInvalidToken = "invalid access reference"

// ErrorInvalidUserIDClaim indicates the user ID in claimsextractor is invalid.
const ErrorInvalidUserIDClaim = "invalid userID in claimsextractor"

// ErrorToRetrieveTokenFromCache indicates an error retrieving the access reference from cache.
const ErrorToRetrieveTokenFromCache = "error retrieving access reference from cache"

// ErrorTokenMismatch indicates the provided token does not match the stored one.
const ErrorTokenMismatch = "provided reference does not match stored one"

// SuccessTokenCreated indicates the access reference was created successfully.
const SuccessTokenCreated = "access reference created successfully"

// SuccessTokenValidated indicates the access reference was validated successfully.
const SuccessTokenValidated = "access reference validated successfully"

// SuccessTokenDeleted indicates the access reference was deleted successfully.
const SuccessTokenDeleted = "access reference deleted successfully"

// Events (trace)
const (
	// EventGenerateToken is emitted right before the token is generated.
	EventGenerateToken = "generate_token"

	// EventSaveTokenToStore is emitted right before persisting the token into the store.
	EventSaveTokenToStore = "save_token_to_store"

	// EventTokenCreated is emitted after the token has been successfully persisted.
	EventTokenCreated = "token_created"

	// EventRevokeToken is emitted right before revoking (deleting) the token from the store.
	EventRevokeToken = "revoke_token"

	// EventTokenRevoked is emitted after the token has been successfully revoked (deleted).
	EventTokenRevoked = "token_revoked"

	// EventVerifyToken is emitted right before verifying token signature/exp.
	EventVerifyToken = "verify_token"

	// EventExtractUserID is emitted before extracting/parsing the userID claim.
	EventExtractUserID = "extract_user_id"

	// EventGetTokenFromStore is emitted before fetching the token from the store.
	EventGetTokenFromStore = "get_token_from_store"

	// EventCompareToken is emitted before comparing the provided token with the stored one.
	EventCompareToken = "compare_token"

	// EventTokenValidated is emitted after successful validation.
	EventTokenValidated = "token_validated"
)
